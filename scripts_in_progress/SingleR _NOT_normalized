if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("SingleR")
BiocManager::install("SingleCellExperiment")
if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("celldex")
BiocManager::install("EnsDb.Hsapiens.v86")

library(SingleR)
library(celldex)
library(Seurat)
library(tidyverse)
library(pheatmap)
library(GEOquery)
library(dplyr)
library(DoubletFinder)
library(Matrix)
library(fields)
library(KernSmooth)
library(ROCR)
library(devtools)
library(remotes)
library(ggplot2)
library(gridExtra)
library(patchwork)
library(cowplot)
library(AnnotationHub)
library(BiocManager)
library(BiocFileCache)
library(ensembldb)
library(biomaRt)
library(EnsDb.Hsapiens.v86)
library(SingleCellExperiment)
library(BPCells)

#load in reference genome
ref <- celldex::HumanPrimaryCellAtlasData(ensembl = TRUE)
View(as.data.frame(colData(ref)))
#read in integrated and clustered seurat object; select resolution
integrated_clustered <- readRDS('integrated_clustered.rds')
Idents(object = integrated_clustered) <- "integrated_snn_res.0.8"

#get counts 
DefaultAssay(integrated_clustered) <- "RNA5"


write_matrix_dir(mat = integrated_clustered[["RNA5"]]$counts.1.1, 
                 dir = '/dir/zhangcounts/counts.1.1')
write_matrix_dir(mat = integrated_clustered[["RNA5"]]$counts.2.2, 
                 dir = '/dir/zhangcounts/counts.2.2')
write_matrix_dir(mat = integrated_clustered[["RNA5"]]$counts.3.3, 
                 dir = '/dir/zhangcounts/counts.3.3')
write_matrix_dir(mat = integrated_clustered[["RNA5"]]$counts.4.4, 
                 dir = '/dir/zhangcounts/counts.4.4')
write_matrix_dir(mat = integrated_clustered[["RNA5"]]$counts.5.5, 
                 dir = '/dir/zhangcounts/counts.5.5')
write_matrix_dir(mat = integrated_clustered[["RNA5"]]$counts.6.6, 
                 dir = '/dir/zhangcounts/counts.6.6')
write_matrix_dir(mat = integrated_clustered[["RNA5"]]$counts.7.7, 
                 dir = '/dir/zhangcounts/counts.7.7')
write_matrix_dir(mat = integrated_clustered[["RNA5"]]$counts.8.8, 
                 dir = '/dir/zhangcounts/counts.8.8')

counts.1.1.mat <- open_matrix_dir(dir = '/dir/zhangcounts/counts.1.1')
counts.2.2.mat <- open_matrix_dir(dir = '/dir/zhangcounts/counts.2.2')
counts.3.3.mat <- open_matrix_dir(dir = '/dir/zhangcounts/counts.3.3')
counts.4.4.mat <- open_matrix_dir(dir = '/dir/zhangcounts/counts.4.4')
counts.5.5.mat <- open_matrix_dir(dir = '/dir/zhangcounts/counts.5.5')
counts.6.6.mat <- open_matrix_dir(dir = '/dir/zhangcounts/counts.6.6')
counts.7.7.mat <- open_matrix_dir(dir = '/dir/zhangcounts/counts.7.7')
counts.8.8.mat <- open_matrix_dir(dir = '/dir/zhangcounts/counts.8.8')

counts_list = c(counts.1.1.mat, counts.2.2.mat, counts.3.3.mat, counts.4.4.mat,
                counts.5.5.mat, counts.6.6.mat, counts.7.7.mat,
                counts.8.8.mat)

joined_object <- CreateSeuratObject(counts = counts_list, 
                                    meta.data = integrated_clustered@meta.data,
                                    project = "ZHANG")

joined_object <- JoinLayers(joined_object)

joined_object[["RNA"]]$counts <- as(object = joined_object[["RNA"]]$counts, Class = "dgCMatrix")

counts <- GetAssayData(joined_object, layer = 'counts')

#ensure counts and reference both use ensembl IDs

require(EnsDb.Hsapiens.v86)
ens <- mapIds(EnsDb.Hsapiens.v86,
              keys = rownames(counts),
              column = 'GENEID',
              keytype = 'SYMBOL')
all(rownames(counts) == names(ens))


keep <- !is.na(ens)
ens <- ens[keep]
counts <- counts[keep,]
rownames(counts) <- ens


#run SingleR at the single cell level
predictions <- SingleR(test = counts, 
                       ref = ref, 
                       labels = ref$label.main)

saveRDS(predictions, file = "predictions.RDS")

integrated_clustered$singleR.labels <- predictions$labels[match(rownames(integrated_clustered@meta.data), rownames(predictions))]

saveRDS(integrated_clustered, 'int_clust_singleR.RDS')

#plot UMAP grouping by singleR predictions
DimPlot(integrated_clustered, reduction = 'umap', group.by = 'singleR.labels')

#make bar plot showing most common cell type per cluster at a resolution of 0.8
table(integrated_clustered$singleR.labels, integrated_clustered$integrated_snn_res.0.8)

ggplot(integrated_clustered@meta.data, aes(x = integrated_snn_res.0.8, fill = singleR.labels)) +
  geom_bar(position = "fill") +
  labs( x = "cluster")
